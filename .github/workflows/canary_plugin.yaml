## Canary CI/CD for plugin type
name: Base Canary Plugin Type
run-name: Base Canary Plugin Type

on:
  workflow_call:
    inputs:
      schema-type:
        description: "schema-type - example: 'playerV3Versions/playerV3OvpVersions'"
        required: true
        type: string
      tests-yarn-run-to-execute:
        description: "list of package.json scripts - example: 'eslint flow test'"
        required: true
        type: string
      node-version:
        description: "which node version to use - example: '17.x/18.x'"
        required: false
        type: string
        default: '17.x'
      run-on-ubuntu:
        description: "run on ubuntu - example 'true/false'"
        required: false
        type: string
        default: 'true'
      run-on-macos:
        description: "run on ubuntu - example 'true/false'"
        required: false
        type: string
        default: 'false'
      enabled-openssl-legacy-provider:
        description: "enable the NODE_OPTIONS --openssl-legacy-provider - example: 'ture/false'"
        required: false
        type: string
        default: 'true'

jobs:
  set_stage:
    uses: ./.github/workflows/set_stage_variable.yaml
  canary:
    needs: set_stage
    uses: kaltura/ovp-pipelines-pub/.github/workflows/player_cicd.yaml@master
    secrets:
      PLAYER_CENTRAL_ACCOUNT_ID: ${{ secrets.PLAYER_CENTRAL_ACCOUNT_ID }}
      PLAYER_SERVICES_ACCOUNT_ID: ${{ secrets.PLAYER_SERVICES_ACCOUNT_ID }}
      PLAYER_S3_BUCKET_DEPLOYMENT: ${{ secrets.PLAYER_S3_BUCKET_DEPLOYMENT }}
      PLAYER_S3_BUCKET_APPS: ${{ secrets.PLAYER_S3_BUCKET_APPS }}
      PLAYER_NPM_TOKEN: ${{ secrets.PLAYER_NPM_TOKEN }}
      PLAYER_LAMBDA_NAME: ${{ secrets.PLAYER_LAMBDA_NAME }}
      PLAYER_MSTEAMS_WEBHOOK: ${{ secrets.PLAYER_MSTEAMS_WEBHOOK }}
      PLAYER_GITHUB_BOT_TOKEN: ${{ secrets.PLAYER_GITHUB_BOT_TOKEN }}
      PLAYER_GITHUB_KCONF_TOKEN: ${{ secrets.PLAYER_GITHUB_KCONF_TOKEN }}
    with:
      type: "plugin"
      stage: ${{ needs.set_stage.outputs.stage }}
      node-version: ${{ inputs.node-version }}
      schema-type: ${{ inputs.schema-type }}
      tests-yarn-run-to-execute: ${{ inputs.tests-yarn-run-to-execute }}
      run-on-ubuntu: ${{ inputs.run-on-ubuntu }}
      run-on-macos: ${{ inputs.run-on-macos }}
      enabled-openssl-legacy-provider: ${{ inputs.enabled-openssl-legacy-provider }}


  run_post_deploy_automation:
    needs: canary
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Workflow in Another Repository
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.REPO_DISPATCH_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/kaltura/player-v7-automation/dispatches \
            -d '{"event_type": "trigger-workflow"}'
