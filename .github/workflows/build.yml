on:
  workflow_call:
    inputs:
        pluginPath:
          description: "The folder name of the plugin"
          required: true
          type: string
        prefix:
          description: "The version prefix"
          required: true
          type: string          
 
jobs:
  # This workflow contains a single job called "build"
  build:
    environment: common
    runs-on: ubuntu-latest
    steps:
      - name: print event type 
        run: |
             echo "event name is:" ${{ github.event_name }} 
             echo "Version perfix is:" ${{ inputs.prefix }}
      - uses: actions/checkout@v3
      - name: print pwd
        run: pwd
      - uses: actions/setup-node@v3
        with:
          node-version: 'v14.20.0'
      - name: yarn install
        run: |
          yarn install
      - name: versioning
        run: |
          #Decide version perfix based on the build event, if PR was created - dev 
          # if merged - 
          echo "Setting version perfix by event name:"  ${{ github.event_name }}
          echo "Run standard-version"
          yarn run release --prerelease canary --skip.commit=true --skip.tag=true
          sha=$(git rev-parse --verify --short HEAD)
          echo "Current sha ${sha}"
          buildNumber=$(( ${{ github.run_number }} + 100 ))
          #commitNumberAfterTag=$(git rev-list  `git rev-list --tags --no-walk --max-count=1`..HEAD --count)
          #echo "Number of commit from last tag ${commitNumberAfterTag}"
          echo "Build number:" $buildNumber
          currentVersion=$(npx -c 'echo "$npm_package_version"')
          echo "Current version ${currentVersion}"
          #newVersion=$(echo $currentVersion | sed -e "s/canary\.[[:digit:]]/canary.${commitNumberAfterTag}-${sha}/g")
          newVersion=$(echo $currentVersion | sed -e "s/canary\.[[:digit:]]/${{ inputs.prefix }}.${buildNumber}-${sha}/g")
          echo "New version ${newVersion}"
          echo ${newVersion} > VERSION.txt
          sed -iE "s/$currentVersion/$newVersion/g" package.json
          sed -iE "s/$currentVersion/$newVersion/g" CHANGELOG.md
      - name: build 
        run: yarn run build
      - name: copy tranlation files 
        run: |
          mkdir ./dist/translations
          cp ./translations/*.18n.json ./dist/translations/
      - name: push to S3
        id: s3
        run: |
          echo "deployment path:" "${{ github.event.repository.name }}/$(cat VERSION.txt)"
          export filePath="${{ inputs.pluginPath }}/$(cat VERSION.txt)"
          echo "$filePath"
          echo "::set-output name=filePath::$filePath"
      - name: test params
        run: |
          echo ${{ secrets.ACCESS_SECRET }} , ${{ secrets.ACCESS }}
      - uses: aws-actions/configure-aws-credentials@v1
        name: Configure AWS credentials
        with:
          aws-access-key-id: ${{ secrets.access }}
          aws-secret-access-key: ${{ secrets.access_secret }}
          aws-region: 'us-east-1'
      - name: Deploy
        run: |
          export DESTINATION="s3://"${{ secrets.bucket }}"/"${{ steps.s3.outputs.filePath }}
          echo $DESTINATION
          aws s3 sync ./dist $DESTINATION
